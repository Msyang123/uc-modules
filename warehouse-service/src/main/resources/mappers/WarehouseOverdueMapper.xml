<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.lhiot.uc.warehouse.mapper.WarehouseOverdueMapper">

    <!-- 数据库字段对象关系映射 -->
    <resultMap id="BaseResultMap"
               type="com.lhiot.uc.warehouse.entity.WarehouseOverdue">
        <id column="id" property="id"/>
        <result column="product_id" property="productId"/>
        <result column="product_name" property="productName"/>
        <result column="product_count" property="productCount"/>
        <result column="price" property="price"/>
        <result column="buy_at" property="buyAt"/>
        <result column="warehouse_id" property="warehouseId"/>
    </resultMap>

    <!-- base查询字段  -->
    <sql id="Base_Column_List">
        <trim suffixOverrides=",">
            id,
            product_id,
            product_name,
            product_count,
            price,
            buy_at,
            warehouse_id,
        </trim>
    </sql>

    <!--新增仓库商品过期降价值处理-->
    <insert id="add" parameterType="com.lhiot.uc.warehouse.entity.WarehouseOverdue" useGeneratedKeys="true"
            keyProperty="id">
        insert into warehouse_overdue
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null ">
                id,
            </if>
            <if test="productId != null ">
                product_id,
            </if>
            <if test="productName != null ">
                product_name,
            </if>
            <if test="productCount != null ">
                product_count,
            </if>
            <if test="price != null ">
                price,
            </if>
            <if test="buyAt != null ">
                buy_at,
            </if>
            <if test="warehouseId != null ">
                warehouse_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null ">
                #{id},
            </if>
            <if test="productId != null ">
                #{productId},
            </if>
            <if test="productName != null ">
                #{productName},
            </if>
            <if test="productCount != null ">
                #{productCount},
            </if>
            <if test="price != null ">
                #{price},
            </if>
            <if test="buyAt != null ">
                #{buyAt},
            </if>
            <if test="warehouseId != null ">
                #{warehouseId},
            </if>
        </trim>
    </insert>

    <!--根据id修改仓库商品过期降价值处理-->
    <update id="updateById" parameterType="com.lhiot.uc.warehouse.entity.WarehouseOverdue">
        update warehouse_overdue
        <set>
            <if test="id != null ">
                id = #{id},
            </if>
            <if test="productId != null ">
                product_id = #{productId},
            </if>
            <if test="productName != null ">
                product_name = #{productName},
            </if>
            <if test="productCount != null ">
                product_count = #{productCount},
            </if>
            <if test="price != null ">
                price = #{price},
            </if>
            <if test="buyAt != null ">
                buy_at = #{buyAt},
            </if>
            <if test="warehouseId != null ">
                warehouse_id = #{warehouseId},
            </if>
        </set>
        where id=#{id}
    </update>

    <!--根据ids删除仓库商品过期降价值处理-->
    <delete id="deleteByIds" parameterType="java.util.List">
        delete from warehouse_overdue where id in
        <foreach collection="list" item="item" open="("
                 separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <!-- 根据id查找仓库商品过期降价值处理 -->
    <select id="selectById" resultMap="BaseResultMap"
            parameterType="long">select
        <include refid="Base_Column_List"/>
        from warehouse_overdue where id = #{id}
    </select>


    <!-- base where条件  -->
    <sql id="Base_Where_Condition">
        <where>
            <if test="id != null ">
                and id = #{id}
            </if>
            <if test="productId != null ">
                and product_id = #{productId}
            </if>
            <if test="productName != null ">
                and product_name = #{productName}
            </if>
            <if test="productCount != null ">
                and product_count = #{productCount}
            </if>
            <if test="price != null ">
                and price = #{price}
            </if>
            <if test="buyAt != null ">
                and buy_at = #{buyAt}
            </if>
            <if test="warehouseId != null ">
                and warehouse_id = #{warehouseId}
            </if>
        </where>
    </sql>


    <!--查询仓库商品过期降价值处理列表-->
    <select id="pageWarehouseOverdues" resultMap="BaseResultMap"
            parameterType="com.lhiot.uc.warehouse.entity.WarehouseOverdue">
        select
        <include refid="Base_Column_List"/>
        from warehouse_overdue
        <include refid="Base_Where_Condition"/>
        <include refid="common.pager"/>
    </select>

    <!--查询仓库商品过期降价值处理总记录-->
    <select id="pageWarehouseOverdueCounts" resultType="int"
            parameterType="com.lhiot.uc.warehouse.entity.WarehouseOverdue">
        select count(1)
        from warehouse_overdue
        <include refid="Base_Where_Condition"/>
    </select>

    <insert id="batchInsert" parameterType="list" >
        insert into warehouse_overdue (product_id,product_name,product_count,price,buy_at,warehouse_id)
        value
        <foreach collection="list" item="item" separator=",">
            (#{item.productId},#{item.productName},#{item.productCount},#{item.price},#{item.buyAt},#{warehouseId})
        </foreach>
    </insert>

    <select id="findConvertProduct" parameterType="map" resultType="com.lhiot.uc.warehouse.entity.WarehouseOverdue">
        select id,warehouse_id,product_id,product_count,price,product_name,buy_at
        from warehouse_overdue
        where now() &gt; DATE_ADD(buy_at,interval #{day} day)
        AND warehouse_id = #{warehouseId} and product_count > 0
    </select>

</mapper>